# Define the states
class State(Enum):
    IDLE = 0
    POWER_UP = 1
    POWER_DOWN = 2
    WORK = 3
    GROUND_UP_TRUST = 3400

# Define the substates for GroundUpTrUSt
class GroundUpTrUStSubstate(Enum):
    INIT = 0
    RUNNING = 1
    ERROR = 2

class StateMachine:
    def __init__(self):
        self.state = State.IDLE
        self.substate = GroundUpTrUStSubstate.INIT

    def set_state(self, state):
        self.state = state
        if state == State.GROUND_UP_TRUST:
            self.substate = GroundUpTrUStSubstate.INIT

    def set_substate(self, substate):
        if self.state == State.GROUND_UP_TRUST:
            self.substate = substate

    def run(self):
        if self.state == State.GROUND_UP_TRUST:
            self.handle_ground_up_trust_substate()

    def handle_ground_up_trust_substate(self):
        if self.substate == GroundUpTrUStSubstate.INIT:
            print("Initializing GroundUpTrUSt...")
            self.set_substate(GroundUpTrUStSubstate.RUNNING)
        elif self.substate == GroundUpTrUStSubstate.RUNNING:
            print("Running GroundUpTrUSt...")
            # Perform actions for the running substate...
        elif self.substate == GroundUpTrUStSubstate.ERROR:
            print("Error occurred in GroundUpTrUSt...")
            # Handle the error substate...

# Example usage:
sm = StateMachine()
sm.set_state(State.GROUND_UP_TRUST)
sm.run()
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
